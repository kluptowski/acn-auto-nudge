<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Between 0 and 1 for probability weighting</description>
        <name>Random_Number_for_Stage</name>
        <label>Random Number for Stage</label>
        <locationX>402</locationX>
        <locationY>1008</locationY>
        <actionName>GetRandomNumber</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>X10_30_60_Weight</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>endNumber</name>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>startNumber</name>
            <value>
                <numberValue>0.0</numberValue>
            </value>
        </inputParameters>
        <nameSegment>GetRandomNumber</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>60.0</apiVersion>
    <assignments>
        <description>throw alll these into one cv so they can be looped</description>
        <name>Combine_Opps_for_Stage_Loop</name>
        <label>Combine Opps for Stage Loop</label>
        <locationX>50</locationX>
        <locationY>792</locationY>
        <assignmentItems>
            <assignToReference>stageOppsFoundForLoopAtoZ</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_First_Discovery_Opp_A_to_Z</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>stageOppsFoundForLoopAtoZ</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_First_Negotiation_Opp_A_to_Z</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>stageOppsFoundForLoopAtoZ</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_First_P_Q_Opp_A_to_Z</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>stageOppsFoundForLoopAtoZ</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_First_Qualified_Opp_A_to_Z</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Thru_Opps_For_Stage_Change</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>moves stage to closed lost and adds to record collection variable</description>
        <name>Set_Stage_Closed_Lost</name>
        <label>Set Stage Closed Lost</label>
        <locationX>402</locationX>
        <locationY>1224</locationY>
        <assignmentItems>
            <assignToReference>Loop_Thru_Opps_For_Stage_Change.StageName</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Closed Lost</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>rcvStageOppsToUpdate</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_Thru_Opps_For_Stage_Change</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Thru_Opps_For_Stage_Change</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>moves stage down 1 and adds to record collection variable</description>
        <name>Set_Stage_to_Decrement_Formula</name>
        <label>Set Stage to Decrement Formula</label>
        <locationX>138</locationX>
        <locationY>1224</locationY>
        <assignmentItems>
            <assignToReference>Loop_Thru_Opps_For_Stage_Change.StageName</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>fStageDecrement</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>rcvStageOppsToUpdate</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_Thru_Opps_For_Stage_Change</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Thru_Opps_For_Stage_Change</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>moves stage up 1 and adds to record collection variable</description>
        <name>Set_Stage_to_Increment_Formula</name>
        <label>Set Stage to Increment Formula</label>
        <locationX>666</locationX>
        <locationY>1224</locationY>
        <assignmentItems>
            <assignToReference>Loop_Thru_Opps_For_Stage_Change.StageName</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>fStageIncrement</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>rcvStageOppsToUpdate</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_Thru_Opps_For_Stage_Change</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Thru_Opps_For_Stage_Change</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>Lets you determine if you do or dont want to run the flow based on day of the week. 1 = sunday, 2= monday, 7 = saturday. at default, will run every day except saturday.</description>
        <name>Want_to_run_it</name>
        <label>Want to run it?</label>
        <locationX>182</locationX>
        <locationY>252</locationY>
        <defaultConnectorLabel>dont run it this day</defaultConnectorLabel>
        <rules>
            <name>Yes_Run_It</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>fDayOfTheWeek</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <numberValue>7.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_First_Qualified_Opp_A_to_Z</targetReference>
            </connector>
            <label>Yes Run It</label>
        </rules>
    </decisions>
    <decisions>
        <description>RNG to determine if the stage goes up, down, or is lost.</description>
        <name>X10_30_60_Weight</name>
        <label>10/30/60 Weight</label>
        <locationX>402</locationX>
        <locationY>1116</locationY>
        <defaultConnector>
            <targetReference>Set_Stage_to_Increment_Formula</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Increment Stage</defaultConnectorLabel>
        <rules>
            <name>Decrement</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Random_Number_for_Stage.randomNumber</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <numberValue>0.4</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Random_Number_for_Stage.randomNumber</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.1</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Stage_to_Decrement_Formula</targetReference>
            </connector>
            <label>Decrement Stage</label>
        </rules>
        <rules>
            <name>Closed_Lost</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Random_Number_for_Stage.randomNumber</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <numberValue>0.1</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Stage_Closed_Lost</targetReference>
            </connector>
            <label>Closed Lost</label>
        </rules>
    </decisions>
    <description>A scheduled flow to change the stage of random opportunities. Includes optional gating by day of the week.</description>
    <environments>Default</environments>
    <formulas>
        <description>makes sure that the same opp isn&apos;t used every single time</description>
        <name>fDateStageChangeReset</name>
        <dataType>Date</dataType>
        <expression>TODAY()-2</expression>
    </formulas>
    <formulas>
        <description>Returns a number based on the day of the week.
1= sunday, 2= monday, ... , 7= saturday. this formula exists so that way if you dont want to run it every single day you dont have to.</description>
        <name>fDayOfTheWeek</name>
        <dataType>Number</dataType>
        <expression>WEEKDAY(today())</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <description>What Stage changes should be if they are</description>
        <name>fStageDecrement</name>
        <dataType>String</dataType>
        <expression>CASE({!Loop_Thru_Opps_For_Stage_Change.StageName}, 
&quot;Discovery&quot;, &quot;Qualification&quot;, 
&quot;Proposal/Quote&quot;, &quot;Discovery&quot;,
&quot;Negotiation&quot;,&quot;Proposal/Quote&quot;,
&quot;Qualification&quot;)</expression>
    </formulas>
    <formulas>
        <name>fStageIncrement</name>
        <dataType>String</dataType>
        <expression>CASE({!Loop_Thru_Opps_For_Stage_Change.StageName}, 
&quot;Qualification&quot;, &quot;Discovery&quot;, 
&quot;Discovery&quot;, &quot;Proposal/Quote&quot;,
&quot;Proposal/Quote&quot; ,&quot;Negotiation&quot;,
&quot;Negotiation&quot;,&quot;Closed Won&quot;,
&quot;Qualification&quot;)</expression>
    </formulas>
    <interviewLabel>Scheduled ACN Nudge - Stage {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Scheduled ACN Nudge - Stage</label>
    <loops>
        <description>loop thru those 4 opps</description>
        <name>Loop_Thru_Opps_For_Stage_Change</name>
        <label>Loop Thru Opps For Stage Change</label>
        <locationX>50</locationX>
        <locationY>900</locationY>
        <collectionReference>stageOppsFoundForLoopAtoZ</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Random_Number_for_Stage</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Update_Stages</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>Gets the first opp in the discovery stage</description>
        <name>Get_First_Discovery_Opp_A_to_Z</name>
        <label>Get First Discovery Opp A to Z</label>
        <locationX>50</locationX>
        <locationY>468</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_First_P_Q_Opp_A_to_Z</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>StageName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Discovery</stringValue>
            </value>
        </filters>
        <filters>
            <field>Amount</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <numberValue>1000.0</numberValue>
            </value>
        </filters>
        <filters>
            <field>LastModifiedDate</field>
            <operator>LessThanOrEqualTo</operator>
            <value>
                <elementReference>fDateStageChangeReset</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Opportunity</object>
        <sortField>Name</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets first opp in the negotiation stage</description>
        <name>Get_First_Negotiation_Opp_A_to_Z</name>
        <label>Get First Negotiation Opp A to Z</label>
        <locationX>50</locationX>
        <locationY>684</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Combine_Opps_for_Stage_Loop</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>StageName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Negotiation</stringValue>
            </value>
        </filters>
        <filters>
            <field>Amount</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <numberValue>1000.0</numberValue>
            </value>
        </filters>
        <filters>
            <field>LastModifiedDate</field>
            <operator>LessThanOrEqualTo</operator>
            <value>
                <elementReference>fDateStageChangeReset</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Opportunity</object>
        <sortField>Name</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets first opp in the p/q stage</description>
        <name>Get_First_P_Q_Opp_A_to_Z</name>
        <label>Get First P/Q Opp A to Z</label>
        <locationX>50</locationX>
        <locationY>576</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_First_Negotiation_Opp_A_to_Z</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>StageName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Proposal/Quote</stringValue>
            </value>
        </filters>
        <filters>
            <field>Amount</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <numberValue>1000.0</numberValue>
            </value>
        </filters>
        <filters>
            <field>LastModifiedDate</field>
            <operator>LessThanOrEqualTo</operator>
            <value>
                <elementReference>fDateStageChangeReset</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Opportunity</object>
        <sortField>Name</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the first opp in the qualified stage</description>
        <name>Get_First_Qualified_Opp_A_to_Z</name>
        <label>Get First Qualified Opp A to Z</label>
        <locationX>50</locationX>
        <locationY>360</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_First_Discovery_Opp_A_to_Z</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>StageName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Qualification</stringValue>
            </value>
        </filters>
        <filters>
            <field>Amount</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <numberValue>1000.0</numberValue>
            </value>
        </filters>
        <filters>
            <field>LastModifiedDate</field>
            <operator>LessThanOrEqualTo</operator>
            <value>
                <elementReference>fDateStageChangeReset</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Opportunity</object>
        <sortField>Name</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>updates the stage on the 4 opps per the loop</description>
        <name>Update_Stages</name>
        <label>Update Stages</label>
        <locationX>50</locationX>
        <locationY>1500</locationY>
        <inputReference>rcvStageOppsToUpdate</inputReference>
    </recordUpdates>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Want_to_run_it</targetReference>
        </connector>
        <schedule>
            <frequency>Daily</frequency>
            <startDate>2024-06-03</startDate>
            <startTime>23:30:00.000Z</startTime>
        </schedule>
        <triggerType>Scheduled</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>currentItemFromSourceCollection</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Opportunity</objectType>
    </variables>
    <variables>
        <description>rcv for the opps you want to update the stage on</description>
        <name>rcvStageOppsToUpdate</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Opportunity</objectType>
    </variables>
    <variables>
        <description>the 4 found alphabetically</description>
        <name>stageOppsFoundForLoopAtoZ</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Opportunity</objectType>
    </variables>
</Flow>
